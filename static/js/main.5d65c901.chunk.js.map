{"version":3,"sources":["App.js","index.js"],"names":["App","useState","productId","setProduct","vendorId","setVendor","handleClick","a","VENDOR_ID","parseInt","PRODUCT_ID","console","log","navigator","usb","requestDevice","filters","device","open","then","selectConfiguration","claimInterface","controlTransferOut","requestType","recipient","request","value","index","transferIn","result","decoder","TextDecoder","decode","data","catch","error","className","type","placeholder","onChange","e","target","required","onClick","ReactDOM","render","document","getElementById"],"mappings":"2LA6DeA,G,MA1DH,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACPC,EADO,KACIC,EADJ,OAEgBF,mBAAS,IAFzB,mBAEPG,EAFO,KAEGC,EAFH,KAIRC,EAAW,uCAAG,gCAAAC,EAAA,6DAGZC,EAAYC,SAASL,EAAU,IAC/BM,EAAaD,SAASP,EAAW,IACrCS,QAAQC,IAAIJ,EAAY,IAAME,GALd,kBAUGG,UAAUC,IAAIC,cAAc,CACvCC,QAAS,CAAC,CACVZ,SAAUI,EACVN,UAAWQ,MAbH,OAUZO,EAVY,OAgBZN,QAAQC,IAAI,QAMZK,EAAOC,OACNC,MAAK,kBAAMF,EAAOG,oBAAoB,MACtCD,MAAK,kBAAMF,EAAOI,eAAe,MACjCF,MAAK,kBAAMF,EAAOK,mBAAmB,CAClCC,YAAa,QACbC,UAAW,YACXC,QAAS,GACTC,MAAO,EACPC,MAAO,OACVR,MAAK,kBAAMF,EAAOW,WAAW,EAAG,OAChCT,MAAK,SAAAU,GACJ,IAAMC,EAAU,IAAIC,YACpBpB,QAAQC,IAAI,aAAekB,EAAQE,OAAOH,EAAOI,UAElDC,OAAM,SAAAC,GAAWxB,QAAQwB,MAAMA,MApCpB,kDAuCZxB,QAAQC,IAAR,MAvCY,0DAAH,qDA2CjB,OACI,sBAAKwB,UAAU,iBAAf,UACI,uBAAOC,KAAK,OAAOD,UAAU,SAASE,YAAY,aAAaZ,MAAOxB,EAAWqC,SAAU,SAACC,GAAD,OAAOrC,EAAWqC,EAAEC,OAAOf,QAAQgB,UAAQ,IACtI,uBAAOL,KAAK,OAAOD,UAAU,SAASE,YAAY,YAAYZ,MAAOtB,EAAUmC,SAAU,SAACC,GAAD,OAAOnC,EAAUmC,EAAEC,OAAOf,QAAQgB,UAAQ,IACnI,wBAAQC,QAASrC,EAAjB,0BCjDZsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5d65c901.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n    const [productId, setProduct] = useState('');\n    const [vendorId, setVendor] = useState('');\n\n    const handleClick = async () =>{\n        let device; \n        /* Get the vendor and product ID */\n        var VENDOR_ID = parseInt(vendorId, 16);\n        var PRODUCT_ID = parseInt(productId, 16);\n        console.log(VENDOR_ID + \" \" + PRODUCT_ID); // Testing if we get correctly the device's data\n        try {\n            /*The first time the user has visited the page then it wonâ€™t have permission \n            to access any devices. Therefore, in order to use USB device, you need to \n            request a permission from the user by calling requestDevice() method*/\n            device = await navigator.usb.requestDevice({\n                filters: [{\n                vendorId: VENDOR_ID,\n                productId: PRODUCT_ID\n                }]\n            });\n            console.log('open'); // Testing for open devices\n            // await device.open();\n            // console.log('opened:', device); // Testing for open devices\n            // if (device.configuration === null)\n            //     await device.selectConfiguration(1);\n            // await device.claimInterface(1);\n            device.open()\n            .then(() => device.selectConfiguration(1)) // Select configuration #1 for the device.\n            .then(() => device.claimInterface(2)) // Request exclusive control over interface #2.\n            .then(() => device.controlTransferOut({\n                requestType: 'class',\n                recipient: 'interface',\n                request: 0x22,\n                value: 0x01,\n                index: 0x02})) // Ready to receive data\n            .then(() => device.transferIn(5, 64)) // Waiting for 64 bytes of data from endpoint #5.\n            .then(result => {\n              const decoder = new TextDecoder();\n              console.log('Received: ' + decoder.decode(result.data));\n            })\n            .catch(error => { console.error(error); });\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <div className=\"main-container\">\n            <input type=\"text\" className=\"search\" placeholder=\"Product ID\" value={productId} onChange={(e) => setProduct(e.target.value)} required/>\n            <input type=\"text\" className=\"search\" placeholder=\"Vendor ID\" value={vendorId} onChange={(e) => setVendor(e.target.value)} required/>\n            <button onClick={handleClick}>\n                Connect\n            </button>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}